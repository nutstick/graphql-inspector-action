{"version":3,"file":"probot.js","sourceRoot":"","sources":["../src/probot.ts"],"names":[],"mappings":"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","sourcesContent":["import * as probot from 'probot';\nimport * as getGithubConfig from 'probot-config';\nimport {buildSchema} from 'graphql';\n\nimport {CheckConclusion, ActionResult, Annotation} from './types';\nimport {diff} from './diff';\nimport * as check from './check-runs';\n\nexport interface Config {\n  diff?: boolean;\n  // similar?: boolean;\n  // coverage?: boolean;\n  schema: SchemaPointer;\n}\n\ninterface FileInfo {\n  ref: string;\n  path: string;\n}\n\nfunction fileLoader({\n  context,\n  owner,\n  repo,\n}: {\n  context: probot.Context;\n  owner: string;\n  repo: string;\n}) {\n  const query = `\n    query GetFile($repo: String!, $owner: String!, $expression: String!) {\n      repository(name: $repo, owner: $owner) {\n        object(expression: $expression) {\n          ... on Blob {\n            text\n          }\n        }\n      }\n    }\n  `;\n\n  return async function loadFile(file: FileInfo): Promise<string> {\n    const result = await context.github.graphql(query, {\n      repo,\n      owner,\n      expression: `${file.ref}:${file.path}`,\n    });\n\n    try {\n      if (!result) {\n        throw new Error(`No result :(`);\n      }\n\n      if (result.data) {\n        return result.data.repository.object.text;\n      }\n\n      return (result as any).repository.object.text;\n    } catch (error) {\n      console.log(result);\n      console.error(error);\n      throw new Error(`Failed to load '${file.path}' (ref: ${file.ref})`);\n    }\n  };\n}\n\nexport interface SchemaPointer {\n  ref: string;\n  path: string;\n}\n\nexport default function handleProbot(app: probot.Application) {\n  app.on('check_run', async context => {\n    const ref = context.payload.check_run.head_sha;\n    const action = context.payload.action;\n    const {owner, repo} = context.repo();\n\n    await handleAction({context, owner, repo, ref, action});\n  });\n\n  app.on('check_suite', async context => {\n    const ref = context.payload.check_suite.head_sha;\n    const action = context.payload.action;\n    const {owner, repo} = context.repo();\n\n    await handleAction({context, owner, repo, ref, action});\n  });\n}\n\nexport async function handleAction({\n  context,\n  owner,\n  repo,\n  ref,\n  action,\n}: {\n  context: probot.Context;\n  owner: string;\n  repo: string;\n  ref: string;\n  action: string;\n}) {\n  if (['requested', 'rerequested', 'gh-action'].indexOf(action) === -1) {\n    return;\n  }\n\n  const id = `${owner}/${repo}#${ref}`;\n\n  context.log.info(`GraphQL Inspector started (action: ${action}) - ${id}`);\n\n  const loadFile = fileLoader({\n    context,\n    owner,\n    repo,\n  });\n\n  const url = await check.start({\n    context,\n    owner,\n    repo,\n    sha: ref,\n  });\n\n  const config = await loadConfig();\n\n  if (!config) {\n    context.log.error(`No config file - ${id}`);\n    await check.complete({\n      url,\n      context,\n      conclusion: CheckConclusion.Failure,\n    });\n    return;\n  }\n\n  const oldPointer: SchemaPointer = config.schema;\n  const newPointer: SchemaPointer = {\n    path: oldPointer.path,\n    ref,\n  };\n\n  const schemas = {\n    old: buildSchema(await loadFile(oldPointer)),\n    new: buildSchema(await loadFile(newPointer)),\n  };\n\n  context.log.info(`Both schemas built - ${id}`);\n\n  const actions: Array<Promise<ActionResult>> = [];\n\n  if (config.diff) {\n    actions.push(\n      diff({\n        path: config.schema.path,\n        schemas,\n      }),\n    );\n  }\n\n  const results = await Promise.all(actions);\n\n  context.log.info(`Actions (${actions.length}) are ready - ${id}`);\n\n  const conclusion = results.some(\n    action => action.conclusion === CheckConclusion.Failure,\n  )\n    ? CheckConclusion.Failure\n    : CheckConclusion.Success;\n\n  const annotations = results.reduce<Annotation[]>((annotations, action) => {\n    if (action.annotations) {\n      return annotations.concat(action.annotations);\n    }\n\n    return annotations;\n  }, []);\n\n  const issueInfo = `Found ${annotations.length} issue${\n    annotations.length > 1 ? 's' : ''\n  }`;\n  const {title, summary} =\n    conclusion === CheckConclusion.Failure\n      ? {\n          title: `Something is wrong with your schema`,\n          summary: issueInfo,\n        }\n      : {\n          title: 'Everything looks good',\n          summary: issueInfo,\n        };\n\n  context.log.info(`Sending annotations (${annotations.length})`);\n\n  await check.annotations({\n    url,\n    context,\n    title,\n    summary,\n    annotations,\n  });\n\n  context.log.info(`Finishing check (${conclusion})`);\n\n  await check.complete({\n    url,\n    context,\n    conclusion,\n  });\n\n  context.log.info(`Completed`);\n\n  async function loadConfig(): Promise<Config | undefined> {\n    const identifier = 'graphql-inspector';\n    const yamlConfig: Config | undefined = await loadGithubConfig(\n      identifier + '.yaml',\n    );\n    const ymlConfig: Config | undefined = await loadGithubConfig(\n      identifier + '.yml',\n    );\n\n    if (yamlConfig || ymlConfig) {\n      return yamlConfig || ymlConfig;\n    } else {\n      const pkg = JSON.parse(\n        await loadFile({\n          ref,\n          path: 'package.json',\n        }),\n      );\n\n      if (pkg[identifier]) {\n        return pkg[identifier];\n      }\n    }\n  }\n\n  function loadGithubConfig(identifier: string) {\n    const loader: any = getGithubConfig;\n\n    if (typeof loader !== 'function' && typeof loader.default !== 'undefined') {\n      loader.default(context, identifier);\n    }\n\n    return loader(context, identifier);\n  }\n}\n"]}
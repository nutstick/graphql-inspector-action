{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../src/diff/interface.ts"],"names":[],"mappings":";;AAGA,yCAAyD;AACzD,iCAAuC;AACvC,0CAAwD;AAExD,SAAgB,kBAAkB,CAChC,YAAkC,EAClC,YAAkC;IAElC,IAAM,OAAO,GAAa,EAAE,CAAC;IAE7B,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,WAAW,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE;IACzD,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE;IAC3D,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,EAAc;YAAb,gBAAK,EAAE,gBAAK;QAC9D,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,sBAAc,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;IAC9D,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAbD,gDAaC;AAED,SAAS,WAAW,CAClB,YAAkC,EAClC,YAAkC;IAElC,IAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC3C,IAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC3C,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAExC,OAAO,mBAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC;SAClC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,SAAS,CAAC,IAAI,CAAC,EAAf,CAAe,CAAC;SAC5B,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,kBAAU,CAAC,YAAY,EAAE,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,aAAa,CACpB,YAAkC,EAClC,YAAkC;IAElC,IAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC3C,IAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC3C,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAExC,OAAO,mBAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC;SAClC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,SAAS,CAAC,IAAI,CAAC,EAAf,CAAe,CAAC;SAC5B,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,oBAAY,CAAC,YAAY,EAAE,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,aAAa,CACpB,YAAkC,EAClC,YAAkC;IAElC,IAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC3C,IAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC3C,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAExC,OAAO,oBAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC;QAClD,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC;QACtB,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC;KACvB,CAAC,EAHiD,CAGjD,CAAC,CAAC;AACN,CAAC","sourcesContent":["import {GraphQLInterfaceType} from 'graphql';\n\nimport {Change} from './changes/change';\nimport {fieldRemoved, fieldAdded} from './changes/field';\nimport {changesInField} from './field';\nimport {diffArrays, unionArrays} from '../utils/arrays';\n\nexport function changesInInterface(\n  oldInterface: GraphQLInterfaceType,\n  newInterface: GraphQLInterfaceType,\n): Change[] {\n  const changes: Change[] = [];\n\n  changes.push(...addedFields(oldInterface, newInterface));\n  changes.push(...removedFields(oldInterface, newInterface));\n  changedFields(oldInterface, newInterface).forEach(({inOld, inNew}) => {\n    changes.push(...changesInField(oldInterface, inOld, inNew));\n  });\n\n  return changes;\n}\n\nfunction addedFields(\n  oldInterface: GraphQLInterfaceType,\n  newInterface: GraphQLInterfaceType,\n): Change[] {\n  const oldFields = oldInterface.getFields();\n  const newFields = newInterface.getFields();\n  const oldNames = Object.keys(oldFields);\n  const newNames = Object.keys(newFields);\n\n  return diffArrays(newNames, oldNames)\n    .map(name => newFields[name])\n    .map(f => fieldAdded(newInterface, f));\n}\n\nfunction removedFields(\n  oldInterface: GraphQLInterfaceType,\n  newInterface: GraphQLInterfaceType,\n): Change[] {\n  const oldFields = oldInterface.getFields();\n  const newFields = newInterface.getFields();\n  const oldNames = Object.keys(oldFields);\n  const newNames = Object.keys(newFields);\n\n  return diffArrays(oldNames, newNames)\n    .map(name => oldFields[name])\n    .map(f => fieldRemoved(oldInterface, f));\n}\n\nfunction changedFields(\n  oldInterface: GraphQLInterfaceType,\n  newInterface: GraphQLInterfaceType,\n) {\n  const oldFields = oldInterface.getFields();\n  const newFields = newInterface.getFields();\n  const oldNames = Object.keys(oldFields);\n  const newNames = Object.keys(newFields);\n\n  return unionArrays(oldNames, newNames).map(name => ({\n    inOld: oldFields[name],\n    inNew: newFields[name],\n  }));\n}\n"]}
{"version":3,"file":"field.js","sourceRoot":"","sources":["../../../src/diff/changes/field.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  GraphQLObjectType,\n  GraphQLField,\n  GraphQLArgument,\n  isNonNullType,\n  GraphQLInterfaceType,\n  isInterfaceType,\n} from 'graphql';\n\nimport {Change, CriticalityLevel, ChangeType} from './change';\nimport {safeChangeForField} from '../../utils/graphql';\n\nexport function fieldRemoved(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n): Change {\n  const entity = isInterfaceType(type) ? 'interface' : 'object type';\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n      reason: field.deprecationReason\n        ? `Removing a deprecated field is a breaking change. Before removing it, you may want to look at the field's usage to see the impact of removing the field.`\n        : `Removing a field is a breaking change. It is preferable to deprecate the field before removing it.`,\n    },\n    type: ChangeType.FieldRemoved,\n    message: `Field '${field.name}' ${\n      field.isDeprecated ? '(deprecated) ' : ''\n    }was removed from ${entity} '${type.name}'`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldAdded(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n): Change {\n  const entity = isInterfaceType(type) ? 'interface' : 'object type';\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldAdded,\n    message: `Field '${field.name}' was added to ${entity} '${type.name}'`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldDescriptionChanged(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  oldField: GraphQLField<any, any>,\n  newField: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDescriptionChanged,\n    message: `Field '${type.name}.${oldField.name}' description changed from '${oldField.description}' to '${newField.description}'`,\n    path: [type.name, oldField.name].join('.'),\n  };\n}\n\nexport function fieldDescriptionAdded(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDescriptionAdded,\n    message: `Field '${type.name}.${field.name}' has description '${field.description}'`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldDescriptionRemoved(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDescriptionRemoved,\n    message: `Description was removed from field '${type.name}.${field.name}'`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldDeprecationAdded(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDeprecationAdded,\n    message: `Field '${type.name}.${field.name}' is deprecated`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldDeprecationRemoved(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Dangerous,\n    },\n    type: ChangeType.FieldDeprecationRemoved,\n    message: `Field '${type.name}.${field.name}' is no longer deprecated`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldDeprecationReasonChanged(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  oldField: GraphQLField<any, any>,\n  newField: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDeprecationReasonChanged,\n    message: `Deprecation reason on field '${type.name}.${newField.name}' has changed from '${oldField.deprecationReason}' to '${newField.deprecationReason}'`,\n    path: [type.name, oldField.name].join('.'),\n  };\n}\n\nexport function fieldDeprecationReasonAdded(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDeprecationReasonAdded,\n    message: `Field '${type.name}.${field.name}' has deprecation reason '${field.deprecationReason}'`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldDeprecationReasonRemoved(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any>,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldDeprecationReasonRemoved,\n    message: `Deprecation reason was removed from field '${type.name}.${field.name}'`,\n    path: [type.name, field.name].join('.'),\n  };\n}\n\nexport function fieldTypeChanged(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  oldField: GraphQLField<any, any, any>,\n  newField: GraphQLField<any, any, any>,\n): Change {\n  return {\n    criticality: {\n      level: safeChangeForField(oldField.type, newField.type)\n        ? CriticalityLevel.NonBreaking\n        : CriticalityLevel.Breaking,\n    },\n    type: ChangeType.FieldTypeChanged,\n    message: `Field '${type}.${oldField.name}' changed type from '${oldField.type}' to '${newField.type}'`,\n    path: [type.name, oldField.name].join('.'),\n  };\n}\n\nexport function fieldArgumentAdded(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n  arg: GraphQLArgument,\n): Change {\n  return {\n    criticality: isNonNullType(arg.type)\n      ? {\n          level: CriticalityLevel.Breaking,\n          reason: `Adding a required argument to an existing field is a breaking change because it will cause existing uses of this field to error.`,\n        }\n      : {\n          level: CriticalityLevel.Dangerous,\n        },\n    type: ChangeType.FieldArgumentAdded,\n    message: `Argument '${arg.name}: ${arg.type}' added to field '${type.name}.${field.name}'`,\n    path: [type.name, field.name, arg.name].join('.'),\n  };\n}\n\nexport function fieldArgumentRemoved(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n  arg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n      reason: `Removing a field argument is a breaking change because it will cause existing queries that use this argument to error.`,\n    },\n    type: ChangeType.FieldArgumentRemoved,\n    message: `Argument '${arg.name}: ${arg.type}' was removed from field '${type.name}.${field.name}'`,\n    path: [type.name, field.name, arg.name].join('.'),\n  };\n}\n"]}
{"version":3,"file":"argument.js","sourceRoot":"","sources":["../../../src/diff/changes/argument.ts"],"names":[],"mappings":";;AAOA,mCAA8D;AAC9D,+CAA4D;AAE5D,SAAgB,+BAA+B,CAC7C,IAA8C,EAC9C,KAAkC,EAClC,MAAuB,EACvB,MAAuB;IAEvB,OAAO;QACL,WAAW,EAAE;YACX,KAAK,EAAE,yBAAgB,CAAC,WAAW;SACpC;QACD,IAAI,EAAE,mBAAU,CAAC,+BAA+B;QAChD,OAAO,EAAE,+BAA6B,MAAM,CAAC,IAAI,oBAC/C,IAAI,CAAC,IAAI,SACP,KAAK,CAAC,IAAI,wBAAmB,MAAM,CAAC,WAAW,cACjD,MAAM,CAAC,WAAW,MACjB;QACH,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;KACrD,CAAC;AACJ,CAAC;AAlBD,0EAkBC;AAED,SAAgB,2BAA2B,CACzC,IAA8C,EAC9C,KAAkC,EAClC,MAAuB,EACvB,MAAuB;IAEvB,OAAO;QACL,WAAW,EAAE;YACX,KAAK,EAAE,yBAAgB,CAAC,SAAS;YACjC,MAAM,EACJ,kHAAkH;SACrH;QACD,IAAI,EAAE,mBAAU,CAAC,2BAA2B;QAC5C,OAAO,EACL,OAAO,MAAM,CAAC,YAAY,KAAK,WAAW;YACxC,CAAC,CAAC,oBAAkB,MAAM,CAAC,YAAY,iCACnC,MAAM,CAAC,IAAI,oBACE,IAAI,CAAC,IAAI,SAAI,KAAK,CAAC,IAAI,MAAG;YAC3C,CAAC,CAAC,iCAA+B,MAAM,CAAC,IAAI,oBAAe,IAAI,CAAC,IAAI,SAChE,KAAK,CAAC,IAAI,wBACO,MAAM,CAAC,YAAY,cAAS,MAAM,CAAC,YAAY,MAAG;QAC3E,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;KACrD,CAAC;AACJ,CAAC;AAvBD,kEAuBC;AAED,SAAgB,wBAAwB,CACtC,IAA8C,EAC9C,KAAkC,EAClC,MAAuB,EACvB,MAAuB;IAEvB,OAAO;QACL,WAAW,EAAE,iCAAuB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC;YAC5D,CAAC,CAAC;gBACE,KAAK,EAAE,yBAAgB,CAAC,WAAW;gBACnC,MAAM,EAAE,2EAA2E;aACpF;YACH,CAAC,CAAC;gBACE,KAAK,EAAE,yBAAgB,CAAC,QAAQ;gBAChC,MAAM,EAAE,qGAAqG;aAC9G;QACL,IAAI,EAAE,mBAAU,CAAC,wBAAwB;QACzC,OAAO,EAAE,wBAAsB,MAAM,CAAC,IAAI,oBAAe,IAAI,CAAC,IAAI,SAChE,KAAK,CAAC,IAAI,wBACO,MAAM,CAAC,IAAI,cAAS,MAAM,CAAC,IAAI,MAAG;QACrD,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;KACrD,CAAC;AACJ,CAAC;AAtBD,4DAsBC","sourcesContent":["import {\n  GraphQLArgument,\n  GraphQLObjectType,\n  GraphQLField,\n  GraphQLInterfaceType,\n} from 'graphql';\n\nimport {Change, CriticalityLevel, ChangeType} from './change';\nimport {safeChangeForInputValue} from '../../utils/graphql';\n\nexport function fieldArgumentDescriptionChanged(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n  oldArg: GraphQLArgument,\n  newArg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.FieldArgumentDescriptionChanged,\n    message: `Description for argument '${newArg.name}' on field '${\n      type.name\n    }.${field.name}' changed from '${oldArg.description}' to '${\n      newArg.description\n    }'`,\n    path: [type.name, field.name, oldArg.name].join('.'),\n  };\n}\n\nexport function fieldArgumentDefaultChanged(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n  oldArg: GraphQLArgument,\n  newArg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Dangerous,\n      reason:\n        'Changing the default value for an argument may change the runtime behaviour of a field if it was never provided.',\n    },\n    type: ChangeType.FieldArgumentDefaultChanged,\n    message:\n      typeof oldArg.defaultValue === 'undefined'\n        ? `Default value '${newArg.defaultValue}' was added to argument '${\n            newArg.name\n          }' on field '${type.name}.${field.name}'`\n        : `Default value for argument '${newArg.name}' on field '${type.name}.${\n            field.name\n          }' changed from '${oldArg.defaultValue}' to '${newArg.defaultValue}'`,\n    path: [type.name, field.name, oldArg.name].join('.'),\n  };\n}\n\nexport function fieldArgumentTypeChanged(\n  type: GraphQLObjectType | GraphQLInterfaceType,\n  field: GraphQLField<any, any, any>,\n  oldArg: GraphQLArgument,\n  newArg: GraphQLArgument,\n): Change {\n  return {\n    criticality: safeChangeForInputValue(oldArg.type, newArg.type)\n      ? {\n          level: CriticalityLevel.NonBreaking,\n          reason: `Changing an input field from non-null to null is considered non-breaking.`,\n        }\n      : {\n          level: CriticalityLevel.Breaking,\n          reason: `Changing the type of a field's argument can cause existing queries that use this argument to error.`,\n        },\n    type: ChangeType.FieldArgumentTypeChanged,\n    message: `Type for argument '${newArg.name}' on field '${type.name}.${\n      field.name\n    }' changed from '${oldArg.type}' to '${newArg.type}'`,\n    path: [type.name, field.name, oldArg.name].join('.'),\n  };\n}\n"]}
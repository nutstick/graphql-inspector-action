{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../src/diff/changes/schema.ts"],"names":[],"mappings":";;AAEA,mCAA8D;AAE9D,SAAgB,sBAAsB,CACpC,SAAwB,EACxB,SAAwB;IAExB,IAAM,OAAO,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE,IAAK,EAAU,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IAC5E,IAAM,OAAO,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE,IAAK,EAAU,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IAE5E,OAAO;QACL,WAAW,EAAE;YACX,KAAK,EAAE,yBAAgB,CAAC,QAAQ;SACjC;QACD,IAAI,EAAE,mBAAU,CAAC,sBAAsB;QACvC,OAAO,EAAE,yCAAuC,OAAO,cAAS,OAAO,MAAG;KAC3E,CAAC;AACJ,CAAC;AAdD,wDAcC;AACD,SAAgB,yBAAyB,CACvC,SAAwB,EACxB,SAAwB;IAExB,IAAM,OAAO,GACX,CAAC,SAAS,CAAC,eAAe,EAAE,IAAK,EAAU,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IACjE,IAAM,OAAO,GACX,CAAC,SAAS,CAAC,eAAe,EAAE,IAAK,EAAU,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IAEjE,OAAO;QACL,WAAW,EAAE;YACX,KAAK,EAAE,yBAAgB,CAAC,QAAQ;SACjC;QACD,IAAI,EAAE,mBAAU,CAAC,yBAAyB;QAC1C,OAAO,EAAE,4CAA0C,OAAO,cAAS,OAAO,MAAG;KAC9E,CAAC;AACJ,CAAC;AAhBD,8DAgBC;AACD,SAAgB,6BAA6B,CAC3C,SAAwB,EACxB,SAAwB;IAExB,IAAM,OAAO,GACX,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAK,EAAU,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IACrE,IAAM,OAAO,GACX,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAK,EAAU,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC;IAErE,OAAO;QACL,WAAW,EAAE;YACX,KAAK,EAAE,yBAAgB,CAAC,QAAQ;SACjC;QACD,IAAI,EAAE,mBAAU,CAAC,6BAA6B;QAC9C,OAAO,EAAE,gDAA8C,OAAO,cAAS,OAAO,MAAG;KAClF,CAAC;AACJ,CAAC;AAhBD,sEAgBC","sourcesContent":["import {GraphQLSchema} from 'graphql';\n\nimport {Change, CriticalityLevel, ChangeType} from './change';\n\nexport function schemaQueryTypeChanged(\n  oldSchema: GraphQLSchema,\n  newSchema: GraphQLSchema,\n): Change {\n  const oldName = (oldSchema.getQueryType() || ({} as any)).name || 'unknown';\n  const newName = (newSchema.getQueryType() || ({} as any)).name || 'unknown';\n\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n    },\n    type: ChangeType.SchemaQueryTypeChanged,\n    message: `Schema query root has changed from '${oldName}' to '${newName}'`,\n  };\n}\nexport function schemaMutationTypeChanged(\n  oldSchema: GraphQLSchema,\n  newSchema: GraphQLSchema,\n): Change {\n  const oldName =\n    (oldSchema.getMutationType() || ({} as any)).name || 'unknown';\n  const newName =\n    (newSchema.getMutationType() || ({} as any)).name || 'unknown';\n\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n    },\n    type: ChangeType.SchemaMutationTypeChanged,\n    message: `Schema mutation root has changed from '${oldName}' to '${newName}'`,\n  };\n}\nexport function schemaSubscriptionTypeChanged(\n  oldSchema: GraphQLSchema,\n  newSchema: GraphQLSchema,\n): Change {\n  const oldName =\n    (oldSchema.getSubscriptionType() || ({} as any)).name || 'unknown';\n  const newName =\n    (newSchema.getSubscriptionType() || ({} as any)).name || 'unknown';\n\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n    },\n    type: ChangeType.SchemaSubscriptionTypeChanged,\n    message: `Schema subscription root has changed from '${oldName}' to '${newName}'`,\n  };\n}\n"]}
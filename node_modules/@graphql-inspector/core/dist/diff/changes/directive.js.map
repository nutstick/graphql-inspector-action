{"version":3,"file":"directive.js","sourceRoot":"","sources":["../../../src/diff/changes/directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  GraphQLDirective,\n  DirectiveLocationEnum,\n  GraphQLArgument,\n  isNonNullType,\n} from 'graphql';\n\nimport {Change, CriticalityLevel, ChangeType} from './change';\nimport {safeChangeForInputValue} from '../../utils/graphql';\n\nexport function directiveRemoved(directive: GraphQLDirective): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n    },\n    type: ChangeType.DirectiveRemoved,\n    message: `Directive '${directive.name}' was removed`,\n    path: `@${directive.name}`,\n  };\n}\nexport function directiveAdded(directive: GraphQLDirective): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.DirectiveAdded,\n    message: `Directive '${directive.name}' was added`,\n    path: `@${directive.name}`,\n  };\n}\n\nexport function directiveDescriptionChanged(\n  oldDirective: GraphQLDirective,\n  newDirective: GraphQLDirective,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.DirectiveDescriptionChanged,\n    message: `Directive '${oldDirective.name}' description changed from '${\n      oldDirective.description\n    }' to '${newDirective.description}'`,\n    path: `@${oldDirective.name}`,\n  };\n}\n\nexport function directiveLocationAdded(\n  directive: GraphQLDirective,\n  location: DirectiveLocationEnum,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.DirectiveLocationAdded,\n    message: `Location '${location}' was added to directive '${\n      directive.name\n    }'`,\n    path: `@${directive.name}`,\n  };\n}\n\nexport function directiveLocationRemoved(\n  directive: GraphQLDirective,\n  location: DirectiveLocationEnum,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n    },\n    type: ChangeType.DirectiveLocationRemoved,\n    message: `Location '${location}' was removed from directive '${\n      directive.name\n    }'`,\n    path: `@${directive.name}`,\n  };\n}\n\nexport function directiveArgumentAdded(\n  directive: GraphQLDirective,\n  arg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: isNonNullType(arg.type)\n        ? CriticalityLevel.Breaking\n        : CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.DirectiveArgumentAdded,\n    message: `Argument '${arg.name}' was added to directive '${\n      directive.name\n    }'`,\n    path: `@${directive.name}`,\n  };\n}\n\nexport function directiveArgumentRemoved(\n  directive: GraphQLDirective,\n  arg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Breaking,\n    },\n    type: ChangeType.DirectiveArgumentRemoved,\n    message: `Argument '${arg.name}' was removed from directive '${\n      directive.name\n    }'`,\n    path: `@${directive.name}.${arg.name}`,\n  };\n}\n\nexport function directiveArgumentDescriptionChanged(\n  directive: GraphQLDirective,\n  oldArg: GraphQLArgument,\n  newArg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.NonBreaking,\n    },\n    type: ChangeType.DirectiveArgumentDescriptionChanged,\n    message: `Description for argument '${oldArg.name}' on directive '${\n      directive.name\n    }' changed from '${oldArg.description}' to '${newArg.description}'`,\n    path: `@${directive.name}.${oldArg.name}`,\n  };\n}\n\nexport function directiveArgumentDefaultValueChanged(\n  directive: GraphQLDirective,\n  oldArg: GraphQLArgument,\n  newArg: GraphQLArgument,\n): Change {\n  return {\n    criticality: {\n      level: CriticalityLevel.Dangerous,\n      reason:\n        'Changing the default value for an argument may change the runtime behaviour of a field if it was never provided.',\n    },\n    type: ChangeType.DirectiveArgumentDefaultValueChanged,\n    message:\n      typeof oldArg.defaultValue === 'undefined'\n        ? `Default value '${newArg.defaultValue}' was added to argument '${\n            newArg.name\n          }' on directive '${directive.name}'`\n        : `Default value for argument '${oldArg.name}' on directive '${\n            directive.name\n          }' changed from '${oldArg.defaultValue}' to '${newArg.defaultValue}'`,\n    path: `@${directive.name}.${oldArg.name}`,\n  };\n}\n\nexport function directiveArgumentTypeChanged(\n  directive: GraphQLDirective,\n  oldArg: GraphQLArgument,\n  newArg: GraphQLArgument,\n): Change {\n  return {\n    criticality: safeChangeForInputValue(oldArg.type, newArg.type)\n      ? {\n          level: CriticalityLevel.NonBreaking,\n          reason:\n            'Changing an input field from non-null to null is considered non-breaking.',\n        }\n      : {\n          level: CriticalityLevel.Breaking,\n        },\n    type: ChangeType.DirectiveArgumentTypeChanged,\n    message: `Type for argument '${oldArg.name}' on directive '${\n      directive.name\n    }' changed from '${oldArg.type}' to '${newArg.type}'`,\n    path: `@${directive.name}.${oldArg.name}`,\n  };\n}\n"]}
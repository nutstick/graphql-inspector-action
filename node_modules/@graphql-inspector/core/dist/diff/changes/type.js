"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var change_1 = require("./change");
var graphql_1 = require("../../utils/graphql");
function typeRemoved(type) {
    return {
        criticality: {
            level: change_1.CriticalityLevel.Breaking,
        },
        type: change_1.ChangeType.TypeRemoved,
        message: "Type '" + type.name + "' was removed",
        path: type.name,
    };
}
exports.typeRemoved = typeRemoved;
function typeAdded(type) {
    return {
        criticality: {
            level: change_1.CriticalityLevel.NonBreaking,
        },
        type: change_1.ChangeType.TypeAdded,
        message: "Type '" + type.name + "' was added",
        path: type.name,
    };
}
exports.typeAdded = typeAdded;
function typeKindChanged(oldType, newType) {
    return {
        criticality: {
            level: change_1.CriticalityLevel.Breaking,
            reason: "Changing the kind of a type is a breaking change because it can cause existing queries to error. For example, turning an object type to a scalar type would break queries that define a selection set for this type.",
        },
        type: change_1.ChangeType.TypeKindChanged,
        message: "'" + oldType.name + "' kind changed from '" + graphql_1.getKind(oldType) + "' to '" + graphql_1.getKind(newType) + "'",
        path: oldType.name,
    };
}
exports.typeKindChanged = typeKindChanged;
function typeDescriptionChanged(oldType, newType) {
    return {
        criticality: {
            level: change_1.CriticalityLevel.NonBreaking,
        },
        type: change_1.ChangeType.TypeDescriptionChanged,
        message: "Description '" + oldType.description + "' on type '" + oldType.name + "' has changed to '" + newType.description + "'",
        path: oldType.name,
    };
}
exports.typeDescriptionChanged = typeDescriptionChanged;
//# sourceMappingURL=type.js.map
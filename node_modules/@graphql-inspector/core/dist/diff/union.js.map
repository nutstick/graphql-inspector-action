{"version":3,"file":"union.js","sourceRoot":"","sources":["../../src/diff/union.ts"],"names":[],"mappings":";;AAEA,0CAA2C;AAC3C,yCAAqE;AAErE,SAAgB,cAAc,CAC5B,QAA0B,EAC1B,QAA0B;IAE1B,IAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;IACrC,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;IACrC,IAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC;IAC/C,IAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC;IAE/C,IAAM,KAAK,GAAG,mBAAU,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,GAAG,CACtD,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,IAAI,EAAf,CAAe,CAAsB,EAAxD,CAAwD,CACjE,CAAC;IACF,IAAM,OAAO,GAAG,mBAAU,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,GAAG,CACxD,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,IAAI,EAAf,CAAe,CAAsB,EAAxD,CAAwD,CACjE,CAAC;IAEF,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,wBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAhC,CAAgC,CAAC,EAAE;IACrE,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,OAAO,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,0BAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAlC,CAAkC,CAAC,EAAE;IAEzE,OAAO,OAAO,CAAC;AACjB,CAAC;AArBD,wCAqBC","sourcesContent":["import {GraphQLUnionType, GraphQLObjectType} from 'graphql';\nimport {Change} from './changes/change';\nimport {diffArrays} from '../utils/arrays';\nimport {unionMemberAdded, unionMemberRemoved} from './changes/union';\n\nexport function changesInUnion(\n  oldUnion: GraphQLUnionType,\n  newUnion: GraphQLUnionType,\n): Change[] {\n  const changes: Change[] = [];\n  const oldTypes = oldUnion.getTypes();\n  const newTypes = newUnion.getTypes();\n  const oldTypenames = oldTypes.map(t => t.name);\n  const newTypenames = newTypes.map(t => t.name);\n\n  const added = diffArrays(newTypenames, oldTypenames).map(\n    name => newTypes.find(t => t.name === name) as GraphQLObjectType,\n  );\n  const removed = diffArrays(oldTypenames, newTypenames).map(\n    name => oldTypes.find(t => t.name === name) as GraphQLObjectType,\n  );\n\n  changes.push(...added.map(type => unionMemberAdded(newUnion, type)));\n  changes.push(...removed.map(type => unionMemberRemoved(oldUnion, type)));\n\n  return changes;\n}\n"]}
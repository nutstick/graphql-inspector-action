{"version":3,"file":"enum.js","sourceRoot":"","sources":["../../src/diff/enum.ts"],"names":[],"mappings":";;AAEA,4CAA4C;AAC5C,uCAKwB;AAExB,0CAAwD;AAExD,SAAgB,aAAa,CAC3B,OAAwB,EACxB,OAAwB;IAExB,IAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,CAAC;IACvD,IAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC;IAEtD,IAAM,KAAK,GAAG,mBAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,GAAG,CAC9C,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAqB,EAA1C,CAA0C,CACnD,CAAC;IACF,IAAM,OAAO,GAAG,mBAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,GAAG,CAChD,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAqB,EAA1C,CAA0C,CACnD,CAAC;IACF,IAAM,MAAM,GAAG,oBAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC;QAC1D,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAqB;QACpD,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAqB;KACrD,CAAC,EAHyD,CAGzD,CAAC,CAAC;IAEJ,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,qBAAc,CAAC,OAAO,EAAE,CAAC,CAAC,EAA1B,CAA0B,CAAC,EAAE;IAC5D,OAAO,CAAC,IAAI,OAAZ,OAAO,EAAS,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,uBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAA5B,CAA4B,CAAC,EAAE;IAEhE,MAAM,CAAC,OAAO,CAAC,UAAC,EAAoB;YAAnB,sBAAQ,EAAE,sBAAQ;QACjC,IAAI,oBAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC1D,OAAO,CAAC,IAAI,CAAC,kCAA2B,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;SACxE;QAED,IAAI,oBAAU,CAAC,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB,CAAC,EAAE;YACtE,OAAO,CAAC,IAAI,CACV,wCAAiC,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAC/D,CAAC;SACH;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAnCD,sCAmCC","sourcesContent":["import {GraphQLEnumType, GraphQLEnumValue} from 'graphql';\n\nimport {isNotEqual} from './common/compare';\nimport {\n  enumValueRemoved,\n  enumValueAdded,\n  enumValueDescriptionChanged,\n  enumValueDeprecationReasonChanged,\n} from './changes/enum';\nimport {Change} from './changes/change';\nimport {unionArrays, diffArrays} from '../utils/arrays';\n\nexport function changesInEnum(\n  oldEnum: GraphQLEnumType,\n  newEnum: GraphQLEnumType,\n): Change[] {\n  const changes: Change[] = [];\n  const oldNames = oldEnum.getValues().map(v => v.value);\n  const newNames = newEnum.getValues().map(v => v.name);\n\n  const added = diffArrays(newNames, oldNames).map(\n    name => newEnum.getValue(name) as GraphQLEnumValue,\n  );\n  const removed = diffArrays(oldNames, newNames).map(\n    name => oldEnum.getValue(name) as GraphQLEnumValue,\n  );\n  const common = unionArrays(oldNames, newNames).map(name => ({\n    oldValue: oldEnum.getValue(name) as GraphQLEnumValue,\n    newValue: newEnum.getValue(name) as GraphQLEnumValue,\n  }));\n\n  changes.push(...added.map(v => enumValueAdded(newEnum, v)));\n  changes.push(...removed.map(v => enumValueRemoved(oldEnum, v)));\n\n  common.forEach(({oldValue, newValue}) => {\n    if (isNotEqual(oldValue.description, newValue.description)) {\n      changes.push(enumValueDescriptionChanged(newEnum, oldValue, newValue));\n    }\n\n    if (isNotEqual(oldValue.deprecationReason, newValue.deprecationReason)) {\n      changes.push(\n        enumValueDeprecationReasonChanged(newEnum, oldValue, newValue),\n      );\n    }\n  });\n\n  return changes;\n}\n"]}
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var change_1 = require("./../changes/change");
var path_1 = require("../common/path");
exports.suppressRemovalOfDeprecatedField = function (_a) {
    var changes = _a.changes, oldSchema = _a.oldSchema;
    return changes.map(function (change) {
        if (change.type === change_1.ChangeType.FieldRemoved &&
            change.criticality.level === change_1.CriticalityLevel.Breaking &&
            change.path) {
            var _a = path_1.parsePath(change.path), typeName = _a[0], fieldName = _a[1];
            var type = oldSchema.getType(typeName);
            if (graphql_1.isObjectType(type) || graphql_1.isInterfaceType(type)) {
                var field = type.getFields()[fieldName];
                if (field.isDeprecated) {
                    return __assign(__assign({}, change), { criticality: __assign(__assign({}, change.criticality), { level: change_1.CriticalityLevel.Dangerous }) });
                }
            }
        }
        return change;
    });
};
//# sourceMappingURL=suppress-removal-of-deprecated-field.js.map
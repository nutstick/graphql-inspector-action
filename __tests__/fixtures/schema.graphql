scalar Url
scalar DateTime

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

input ConnectionInput {
  after: String
  before: String
  first: Int
  last: Int
}

interface Connection {
  totalCount: Int!
  edges: [Edges!]
  pageInfo: PageInfo
}

interface Edges {
  node: Node!
  cursor: ID!
}

enum Direction {
  ASC
  DESC
}

"""
Base Node
"""
interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  username: String!
  avatar: String!
}

type UserEdges implements Edges {
  node: User!
  cursor: ID!
}

type UserConnection implements Connection {
  totalCount: Int!
  edges: [User!]
  pageInfo: PageInfo
}

type Comment implements Node {
  id: ID!
  content: String!
  author: User!
  likes: UserConnection!
}

type CommentEdges implements Edges {
  node: Comment!
  cursor: ID!
}

type CommentConnection implements Connection {
  totalCount: Int!
  edges: [CommentEdges!]
  pageInfo: PageInfo
}

type Post implements Node {
  id: ID!
  caption: String
  image: Url
  author: User!
  comments: CommentConnection!
  likes: UserConnection!
}

type PostEdges implements Edges {
  node: Post!
  cursor: ID!
}

type PostConnection implements Connection {
  totalCount: Int!
  edges: [PostEdges!]
  pageInfo: PageInfo
}

type Query {
  posts: PostConnection
}
